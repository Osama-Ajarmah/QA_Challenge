<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="7" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-05-19T19:21:19 EEST" name="Default suite" finished-at="2021-05-19T19:21:31 EEST" duration-ms="12227">
    <groups>
    </groups>
    <test started-at="2021-05-19T19:21:19 EEST" name="Default test" finished-at="2021-05-19T19:21:31 EEST" duration-ms="12227">
      <class name="com.api.test.QAchallengeTest">
        <test-method signature="fetchResultBySearch()[pri:1, instance:com.api.test.QAchallengeTest@2034b64c]" started-at="2021-05-19T19:21:19 EEST" name="fetchResultBySearch" finished-at="2021-05-19T19:21:23 EEST" duration-ms="3583" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchResultBySearch -->
        <test-method signature="fetchResultBySearchWithFillters()[pri:2, instance:com.api.test.QAchallengeTest@2034b64c]" started-at="2021-05-19T19:21:23 EEST" name="fetchResultBySearchWithFillters" finished-at="2021-05-19T19:21:23 EEST" duration-ms="850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchResultBySearchWithFillters -->
        <test-method signature="fetchResultBySearchWithCity()[pri:3, instance:com.api.test.QAchallengeTest@2034b64c]" started-at="2021-05-19T19:21:23 EEST" name="fetchResultBySearchWithCity" finished-at="2021-05-19T19:21:24 EEST" duration-ms="593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchResultBySearchWithCity -->
        <test-method signature="fetchResultWithPagination()[pri:4, instance:com.api.test.QAchallengeTest@2034b64c]" started-at="2021-05-19T19:21:24 EEST" name="fetchResultWithPagination" finished-at="2021-05-19T19:21:25 EEST" duration-ms="725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchResultWithPagination -->
        <test-method signature="fetchResultByLat()[pri:5, instance:com.api.test.QAchallengeTest@2034b64c]" started-at="2021-05-19T19:21:25 EEST" name="fetchResultByLat" finished-at="2021-05-19T19:21:27 EEST" duration-ms="2319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchResultByLat -->
        <test-method signature="fetchResultByLatandLongWithLocation()[pri:6, instance:com.api.test.QAchallengeTest@2034b64c]" started-at="2021-05-19T19:21:27 EEST" name="fetchResultByLatandLongWithLocation" finished-at="2021-05-19T19:21:29 EEST" duration-ms="1675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchResultByLatandLongWithLocation -->
        <test-method signature="fetchResultByFullTime()[pri:7, instance:com.api.test.QAchallengeTest@2034b64c]" started-at="2021-05-19T19:21:29 EEST" name="fetchResultByFullTime" finished-at="2021-05-19T19:21:30 EEST" duration-ms="1136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchResultByFullTime -->
        <test-method signature="fetchResultById()[pri:8, instance:com.api.test.QAchallengeTest@2034b64c]" started-at="2021-05-19T19:21:30 EEST" name="fetchResultById" finished-at="2021-05-19T19:21:31 EEST" duration-ms="681" status="FAIL">
          <exception class="com.google.gson.JsonSyntaxException">
            <message>
              <![CDATA[com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 2 column 12 path $]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.google.gson.JsonSyntaxException: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 2 column 12 path $
at com.google.gson.JsonParser.parse(JsonParser.java:65)
at com.google.gson.JsonParser.parse(JsonParser.java:45)
at com.api.test.QAchallengeTest.fetchResultById(QAchallengeTest.java:239)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 2 column 12 path $
at com.google.gson.stream.JsonReader.syntaxError(JsonReader.java:1568)
at com.google.gson.stream.JsonReader.checkLenient(JsonReader.java:1409)
at com.google.gson.stream.JsonReader.doPeek(JsonReader.java:542)
at com.google.gson.stream.JsonReader.peek(JsonReader.java:425)
at com.google.gson.JsonParser.parse(JsonParser.java:60)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.google.gson.JsonSyntaxException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchResultById -->
        <test-method signature="fetchResultByIdandMarkdown()[pri:9, instance:com.api.test.QAchallengeTest@2034b64c]" started-at="2021-05-19T19:21:31 EEST" name="fetchResultByIdandMarkdown" finished-at="2021-05-19T19:21:31 EEST" duration-ms="623" status="FAIL">
          <exception class="com.google.gson.JsonSyntaxException">
            <message>
              <![CDATA[com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 2 column 12 path $]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.google.gson.JsonSyntaxException: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 2 column 12 path $
at com.google.gson.JsonParser.parse(JsonParser.java:65)
at com.google.gson.JsonParser.parse(JsonParser.java:45)
at com.api.test.QAchallengeTest.fetchResultByIdandMarkdown(QAchallengeTest.java:268)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 2 column 12 path $
at com.google.gson.stream.JsonReader.syntaxError(JsonReader.java:1568)
at com.google.gson.stream.JsonReader.checkLenient(JsonReader.java:1409)
at com.google.gson.stream.JsonReader.doPeek(JsonReader.java:542)
at com.google.gson.stream.JsonReader.peek(JsonReader.java:425)
at com.google.gson.JsonParser.parse(JsonParser.java:60)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.google.gson.JsonSyntaxException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchResultByIdandMarkdown -->
      </class> <!-- com.api.test.QAchallengeTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
